@model PoEBrowser.Models.SkillGem

@{
    ViewData["Title"] = "GetSkillGem";
}

@{
    // Skill Icon
    string skillIconSrc = "https://web.poecdn.com/image/Art/2DArt/SkillIcons/" + Model.BaseItem.DisplayName.Replace(" ", "") + ".png";

    // Gem Properties
    Model.GemName = Model.BaseItem.DisplayName;

    // Stat Indices
    List<int> nonNullStatIndexes = new List<int>();

    int numStats = 0;
    if (Model.Static.Stats != null)
    {
        numStats = Model.Static.Stats.Count();
    }
    else
    {
        numStats = Model.PerLevel["1"].Stats.Distinct().Count();
    }

    foreach (var level in Model.PerLevel)
    {
        if (level.Value.Stats != null)
        {
            for (int i = 0; i < level.Value.Stats.Count(); i++)
            {
                if (level.Value.Stats[i] != null)
                {
                    nonNullStatIndexes.Add(i);
                }
            }
        }
    }
    nonNullStatIndexes = nonNullStatIndexes.Distinct().ToList();

    // Stat Requirements
    List<string> statReqs = new List<string>();
    if (Model.PerLevel["1"].StatRequirements != null)
    {
        statReqs = Model.PerLevel["1"].StatRequirements.Keys.ToList();
    }


    // Click Actions
    var tagClickAction = Model.IsSupport ? "GetSupportSkillGemsByType" : "GetActiveSkillGemsByType";

    // Vaal Values
    var nonVaalCounterpart = (Model.SecondaryEffect != null) ? Model.GemName.Replace("Vaal ", "") : null;

    // Slightly hacky fix for Vaal-Breach & Vaal Impurities
    if(Model.GemName == "Vaal Breach")
    {
        nonVaalCounterpart = "Portal";
    }

    if (Model.GemName.Contains("Impurity"))
    {
        nonVaalCounterpart = Model.GemName.Replace("Vaal Imp", "P");
    }
}

<div class="container-fluid m-sm-3 p-sm-3">

    <div class="row">
        <div class="col-md-2">
            <div class="row mt-sm-2">
                <div class="col-md-12">
                    <img class="mx-auto d-block" src=@Model.ImgSrcString.Replace(".png?scale=1", ".png")>
                </div>
            </div>
        </div>

        <div class="col-md-10">
            <div class="row mt-sm-2 pt-sm-2 mb-0 pt-0">
                <div class="col-md-12 text-left">
                    <a href="#" style="font-size: larger"><b>@Model.GemName</b></a>
                </div>
            </div>

            <div class="row mt-0 pt-0 mb-0 pb-0">
                <div class="col-md-12 text-left">
                    @foreach (var tag in Model.Tags.Where(x => x != "active_skill" && x != "support"))
                    {
                        <a asp-action="@tagClickAction" asp-route-type="@tag" style="font-size: small">@tag, </a>
                    }
                </div>
            </div>

            @if (!Model.IsSupport)
            {
                <div class="row mb-0 mt-3">
                    <div class="col-md-12">
                        <h6 class="mb-1 text-muted"><b>Description</b></h6>
                        <hr class="mt-0 mb-2" />
                    </div>
                </div>

                <div class="row mt-0 pt-0 mb-0 pb-0">
                    <div class="col-md-12 text-left">
                        @if (Model.ActiveSkill.Description != "")
                        {
                            <p style="font-size: small">@Model.ActiveSkill.Description</p>
                        }
                        else
                        {
                            <p style="font-size: small"><i>Item has no description.</i></p>
                        }

                    </div>
                </div>
            }

            @if (Model.IsSupport && Model.Static.ManaMultiplier != 0)
            {
                <div class="row mb-0 mt-3">
                    <div class="col-md-12">
                        @if (Model.Static.ManaReservationOverride != 0)
                        {
                            <h6 class="mb-1 text-muted"><b>Mana Reservation</b></h6>
                        }
                        else
                        {
                            <h6 class="mb-1 text-muted"><b>Mana Cost Multiplier</b></h6>
                        }
                        <hr class="mt-0 mb-2" />
                    </div>
                </div>

                <div class="row mt-0 pt-0 mb-0 pb-0">
                    <div class="col-md-12 text-left">
                        @if (Model.Static.ManaReservationOverride != 0)
                        {
                            <p style="font-size: small">@Model.Static.ManaReservationOverride %</p>
                        }
                        else
                        {
                            <p style="font-size: small">@Model.Static.ManaMultiplier %</p>
                        }
                    </div>
                </div>
            }

            <div class="row mb-0 mt-3">
                <div class="col-md-12">
                    <h6 class="mb-1 text-muted"><b>Gem Quality Effect(s) Per %</b></h6>
                    <hr class="mt-0 mb-2" />
                </div>
            </div>

            <div class="row mt-0 pt-0 mb-0 pb-0">
                <div class="col-md-12 text-left">         
                    <table cellpadding="2" cellspacing="2" class="table-sm table-striped table-bordered mt-1 mb-3">
                        <thead>
                            <tr>
                                <th>id</th>
                                <th>Value</th>
                            </tr>                          
                        </thead>
                        <tbody>
                            @foreach (var stat in Model.Static.QualityStats)
                            {
                                <tr>
                                    <td style="font-size: small">@stat.GetValueOrDefault("id", "")</td>
                                    <td style="font-size: small">@((float)((int)stat.GetValueOrDefault("value", "")) / 1000)</td>
                                </tr>
                            }
                        </tbody>                       
                    </table>
                </div>
            </div>

            @if (Model.SecondaryEffect != null)
            {

                <div class="row mb-0 mt-1">
                    <div class="col-md-12">
                        <h6 class="mb-1 text-muted"><b>Non-Vaal Counterpart</b></h6>
                        <hr class="mt-0 mb-2" />
                    </div>
                </div>

                <div class="row mt-0 pt-0 mb-0 pb-0">
                    <div class="col-md-12 text-left">
                        <a asp-action="GetActiveSkillGemByName" asp-route-name="@nonVaalCounterpart" style="font-size: small">@nonVaalCounterpart</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div class="container-fluid" style="overflow-x:auto">

    <div class="row mb-0 mt-2">
        <div class="col-md-12">
            <h6 class="mb-1 text-muted"><b>Base Stats</b></h6>
            <hr class="mt-0 mb-2" />
        </div>
    </div>

    <table cellpadding="5" cellspacing="5" class="table-responsive-sm table-striped table-bordered mt-1 mb-3">
        <thead class="thead-dark">
            <tr>
                @for (int i = 0; i < numStats; i++)
                {
                    if (!nonNullStatIndexes.Contains(i))
                    {
                        <th class="" style="font-size: small">@Model.Static.Stats[i].GetValueOrDefault("id", "")</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                @for (int i = 0; i < numStats; i++)
                {
                    if (!nonNullStatIndexes.Contains(i))
                    {
                        <th style="font-size: small">@Model.Static.Stats[i].GetValueOrDefault("value", "").ToString()</th>
                    }
                }
            </tr>
        </tbody>
    </table>

    <div class="row mb-0 mt-4">
        <div class="col-md-12">
            <h6 class="mb-1 text-muted"><b>Per Level Stats</b></h6>
            <hr class="mt-0 mb-2" />
        </div>
    </div>

    <table cellpadding="5" cellspacing="5" class="table-striped table-bordered mt-1 mb-3">
        <thead class="thead-dark">
            <tr>
                <th style="font-size: small">Level</th>
                <th style="font-size: small">Level Req.</th>

                @for (int i = 0; i < statReqs.Count(); i++)
                {
                    <th style="font-size: small">@statReqs[i] Req.</th>
                }

                <th style="font-size : small">Mana Cost</th>

                @for (int i = 0; i < numStats; i++)
                {
                    if (nonNullStatIndexes.Contains(i))
                    {
                        if (Model.Static.Stats != null)
                        {
                            <th style="font-size: small;">@Model.Static.Stats[i].GetValueOrDefault("id", "")</th>
                        }
                        else
                        {
                            <th style="font-size: small;">@Model.PerLevel["1"].Stats[i].GetValueOrDefault("id", "")</th>
                        }
                    }
                }

            </tr>
        </thead>
        <tbody>
            @foreach (var level in Model.PerLevel)
            {
                <tr>
                    <td>@level.Key.ToString()</td>
                    <td>@level.Value.RequiredLevel</td>
                    @for (int i = 0; i < statReqs.Count(); i++)
                    {
                        <td>@level.Value.StatRequirements.Values.ToList()[i]</td>
                    }
                    <td>
                        @if (level.Value.ManaCost == 0)
                        {
                            @Model.Static.ManaCost
                        }
                        else
                        {
                            @level.Value.ManaCost
                        }
                    </td>

                    @if (level.Value.Stats != null)
                    {
                        for (int i = 0; i < level.Value.Stats.Count(); i++)
                        {

                            if (nonNullStatIndexes.Contains(i))
                            {
                                <td>@level.Value.Stats[i].GetValueOrDefault("value", "")</td>
                            }
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
